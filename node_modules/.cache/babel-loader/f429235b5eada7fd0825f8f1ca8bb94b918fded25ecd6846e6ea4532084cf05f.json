{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epslk\\\\Documents\\\\GitHub\\\\Simple_HTMLStudyWeb\\\\src\\\\post\\\\PagePost.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  const markdownFiles = [{\n    name: \"카테고리1\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }, {\n    name: \"카테고리2\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }];\n\n  //페이지 데이터 받아서 글자 출력  \n  function CategoryList() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: category.post.map((post, postIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: post.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this), \": \", post.content]\n          }, postIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Post","markdownFiles","name","post","content","CategoryList","children","fileName","_jsxFileName","lineNumber","columnNumber","categories","map","category","index","postIndex","_c","$RefreshReg$"],"sources":["C:/Users/epslk/Documents/GitHub/Simple_HTMLStudyWeb/src/post/PagePost.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\"; \r\n\r\nexport default function Post() {\r\n\r\n  const markdownFiles = [\r\n    {name : \"카테고리1\", post :[\r\n    { name: \"대학공부\", content: \"내용1\" }, \r\n    { name: \"유니티\", content: \"내용2\" }\r\n    ]},\r\n    {name : \"카테고리2\", post :[\r\n      { name: \"대학공부\", content: \"내용1\" }, \r\n      { name: \"유니티\", content: \"내용2\" }\r\n      ]}\r\n  ]\r\n\r\n  //페이지 데이터 받아서 글자 출력  \r\n  function CategoryList() {\r\n    return (\r\n      <div>\r\n        <h2>카테고리 목록</h2>\r\n        {categories.map((category, index) => (\r\n          <div key={index}>\r\n            <h3>{category.name}</h3>\r\n            <ul>\r\n              {category.post.map((post, postIndex) => (\r\n                <li key={postIndex}>\r\n                  <strong>{post.name}</strong>: {post.content}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAE7B,MAAMC,aAAa,GAAG,CACpB;IAACC,IAAI,EAAG,OAAO;IAAEC,IAAI,EAAE,CACvB;MAAED,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAM,CAAC,EAChC;MAAEF,IAAI,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAM,CAAC;EAC9B,CAAC,EACF;IAACF,IAAI,EAAG,OAAO;IAAEC,IAAI,EAAE,CACrB;MAAED,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAM,CAAC,EAChC;MAAEF,IAAI,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAM,CAAC;EAC9B,CAAC,CACL;;EAED;EACA,SAASC,YAAYA,CAAA,EAAG;IACtB,oBACEN,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACfC,UAAU,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC9Bf,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,EAAKO,QAAQ,CAACX;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBX,OAAA;UAAAO,QAAA,EACGO,QAAQ,CAACV,IAAI,CAACS,GAAG,CAAC,CAACT,IAAI,EAAEY,SAAS,kBACjChB,OAAA;YAAAO,QAAA,gBACEP,OAAA;cAAAO,QAAA,EAASH,IAAI,CAACD;YAAI;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,MAAE,EAACP,IAAI,CAACC,OAAO;UAAA,GADpCW,SAAS;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GARGI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AAGF;AAACM,EAAA,GAnCuBhB,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}