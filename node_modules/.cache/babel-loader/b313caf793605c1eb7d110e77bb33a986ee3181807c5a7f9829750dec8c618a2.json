{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epslk\\\\Documents\\\\GitHub\\\\Simple_HTMLStudyWeb\\\\src\\\\post\\\\PagePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const markdownFiles = [{\n    name: \"카테고리1\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }, {\n    name: \"카테고리2\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }];\n  const handleCategoryClick = categoryName => {\n    setSelectedCategory(categoryName);\n  };\n\n  // 페이지 데이터 받아서 글자 출력  \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAE00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: markdownFiles.map((file, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          onClick: () => handleCategoryClick(file.name),\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), selectedCategory === file.name && file.post.map((post, postIndex) => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/blog/${file.name}/${post.name}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)]\n        }, postIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this))]\n      }, fileIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"RgHDLEuJ1Ja2GayX64Y/niiK+6s=\");\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Post","_s","selectedCategory","setSelectedCategory","markdownFiles","name","post","content","handleCategoryClick","categoryName","children","fileName","_jsxFileName","lineNumber","columnNumber","map","file","fileIndex","onClick","postIndex","to","_c","$RefreshReg$"],"sources":["C:/Users/epslk/Documents/GitHub/Simple_HTMLStudyWeb/src/post/PagePost.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"; \r\n\r\nexport default function Post() {\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  const markdownFiles = [\r\n    { name: \"카테고리1\", post: [\r\n      { name: \"대학공부\", content: \"내용1\" }, \r\n      { name: \"유니티\", content: \"내용2\" }\r\n    ]},\r\n    { name: \"카테고리2\", post: [\r\n      { name: \"대학공부\", content: \"내용1\" }, \r\n      { name: \"유니티\", content: \"내용2\" }\r\n    ]}\r\n  ];\r\n\r\n  const handleCategoryClick = (categoryName) => {\r\n    setSelectedCategory(categoryName);\r\n  };\r\n\r\n  // 페이지 데이터 받아서 글자 출력  \r\n  return (\r\n    <div>\r\n      <h2>글</h2>\r\n      <div>\r\n        {markdownFiles.map((file, fileIndex) => (\r\n          <div key={fileIndex}>\r\n            <h3 onClick={() => handleCategoryClick(file.name)}>{file.name}</h3>\r\n            {selectedCategory === file.name && file.post.map((post, postIndex) => (\r\n              <Link\r\n                key={postIndex}\r\n                to={`/blog/${file.name}/${post.name}`} \r\n              > \r\n                <p>{post.name}</p>\r\n                <p>{post.content}</p> \r\n              </Link> \r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMQ,aAAa,GAAG,CACpB;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CACrB;MAAED,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAM,CAAC,EAChC;MAAEF,IAAI,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAM,CAAC;EAChC,CAAC,EACF;IAAEF,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CACrB;MAAED,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAM,CAAC,EAChC;MAAEF,IAAI,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAM,CAAC;EAChC,CAAC,CACH;EAED,MAAMC,mBAAmB,GAAIC,YAAY,IAAK;IAC5CN,mBAAmB,CAACM,YAAY,CAAC;EACnC,CAAC;;EAED;EACA,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACVf,OAAA;MAAAW,QAAA,EACGN,aAAa,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,SAAS,kBACjClB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAImB,OAAO,EAAEA,CAAA,KAAMV,mBAAmB,CAACQ,IAAI,CAACX,IAAI,CAAE;UAAAK,QAAA,EAAEM,IAAI,CAACX;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAClEZ,gBAAgB,KAAKc,IAAI,CAACX,IAAI,IAAIW,IAAI,CAACV,IAAI,CAACS,GAAG,CAAC,CAACT,IAAI,EAAEa,SAAS,kBAC/DpB,OAAA,CAACF,IAAI;UAEHuB,EAAE,EAAE,SAASJ,IAAI,CAACX,IAAI,IAAIC,IAAI,CAACD,IAAI,EAAG;UAAAK,QAAA,gBAEtCX,OAAA;YAAAW,QAAA,EAAIJ,IAAI,CAACD;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBf,OAAA;YAAAW,QAAA,EAAIJ,IAAI,CAACC;UAAO;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAJhBK,SAAS;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACP,CAAC;MAAA,GAVMG,SAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CAxCuBD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}