{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epslk\\\\Documents\\\\GitHub\\\\Simple_HTMLStudyWeb\\\\src\\\\post\\\\PageCategory.js\";\n// src/post/PageCategory.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst markdownFiles = [{\n  name: \"CosProC\",\n  type: \"folder\",\n  posts: [{\n    id: 1,\n    name: \"가장많이받은선물-lv1\",\n    type: \"file\"\n  }, {\n    id: 2,\n    name: \"리눅스\",\n    type: \"file\"\n  }]\n}, {\n  name: \"리눅스\",\n  type: \"folder\",\n  posts: [{\n    id: 3,\n    name: \"2-2-20220903-1\",\n    type: \"file\"\n  }, {\n    id: 4,\n    name: \"2-2-20220903-2\",\n    type: \"file\"\n  }]\n}];\nconst Category = ({\n  setSelectedCategory\n}) => {\n  const handleCategoryClick = categoryName => {\n    setSelectedCategory(categoryName);\n    setTimeout(() => {\n      window.location.reload(); // 페이지 새로고침\n    }, 100); // 100ms 후에 새로고침\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: markdownFiles.map((category, index) => category.type === 'folder' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/blog/${category.name}`,\n          onClick: () => handleCategoryClick(category.name),\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","markdownFiles","name","type","posts","id","Category","setSelectedCategory","handleCategoryClick","categoryName","setTimeout","window","location","reload","children","map","category","index","to","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/epslk/Documents/GitHub/Simple_HTMLStudyWeb/src/post/PageCategory.js"],"sourcesContent":["// src/post/PageCategory.js\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst markdownFiles = [\r\n  {\r\n    name: \"CosProC\", type: \"folder\",\r\n    posts: [\r\n      { id: 1, name: \"가장많이받은선물-lv1\", type: \"file\" },\r\n      { id: 2, name: \"리눅스\", type: \"file\" }\r\n    ]\r\n  },\r\n  {\r\n    name: \"리눅스\", type: \"folder\",\r\n    posts: [\r\n      { id: 3, name: \"2-2-20220903-1\", type: \"file\" },\r\n      { id: 4, name: \"2-2-20220903-2\", type: \"file\" }\r\n    ]\r\n  }\r\n];\r\n\r\nconst Category = ({ setSelectedCategory }) => {\r\n  const handleCategoryClick = (categoryName) => {\r\n    setSelectedCategory(categoryName);\r\n    setTimeout(() => {\r\n      window.location.reload();  // 페이지 새로고침\r\n    }, 100); // 100ms 후에 새로고침\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {markdownFiles.map((category, index) => (\r\n        category.type === 'folder' && (\r\n          <div key={index}>\r\n            <h3>\r\n              <Link to={`/blog/${category.name}`} onClick={() => handleCategoryClick(category.name)}>\r\n                {category.name}\r\n              </Link>\r\n            </h3>\r\n          </div>\r\n        )\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAG,CACpB;EACEC,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE,QAAQ;EAC/BC,KAAK,EAAE,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEH,IAAI,EAAE,cAAc;IAAEC,IAAI,EAAE;EAAO,CAAC,EAC7C;IAAEE,EAAE,EAAE,CAAC;IAAEH,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC;AAExC,CAAC,EACD;EACED,IAAI,EAAE,KAAK;EAAEC,IAAI,EAAE,QAAQ;EAC3BC,KAAK,EAAE,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEH,IAAI,EAAE,gBAAgB;IAAEC,IAAI,EAAE;EAAO,CAAC,EAC/C;IAAEE,EAAE,EAAE,CAAC;IAAEH,IAAI,EAAE,gBAAgB;IAAEC,IAAI,EAAE;EAAO,CAAC;AAEnD,CAAC,CACF;AAED,MAAMG,QAAQ,GAAGA,CAAC;EAAEC;AAAoB,CAAC,KAAK;EAC5C,MAAMC,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,mBAAmB,CAACE,YAAY,CAAC;IACjCC,UAAU,CAAC,MAAM;MACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAE;IAC7B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,EACGb,aAAa,CAACc,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KACjCD,QAAQ,CAACb,IAAI,KAAK,QAAQ,iBACxBH,OAAA;MAAAc,QAAA,eACEd,OAAA;QAAAc,QAAA,eACEd,OAAA,CAACF,IAAI;UAACoB,EAAE,EAAE,SAASF,QAAQ,CAACd,IAAI,EAAG;UAACiB,OAAO,EAAEA,CAAA,KAAMX,mBAAmB,CAACQ,QAAQ,CAACd,IAAI,CAAE;UAAAY,QAAA,EACnFE,QAAQ,CAACd;QAAI;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC,GALGN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CAER;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAvBIlB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}