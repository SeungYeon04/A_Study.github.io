{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epslk\\\\Documents\\\\GitHub\\\\Simple_HTMLStudyWeb\\\\src\\\\post\\\\PageCategory.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst markdownFiles = [{\n  name: \"카테고리1\",\n  type: \"folder\",\n  posts: [{\n    name: \"대학공부\",\n    type: \"file\"\n  }, {\n    name: \"유니티\",\n    type: \"file\"\n  }]\n}, {\n  name: \"카테고리2\",\n  type: \"folder\",\n  posts: [{\n    name: \"자바스크립트\",\n    type: \"file\"\n  }, {\n    name: \"리액트\",\n    type: \"file\"\n  }]\n}];\nexport default function Post() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: markdownFiles.map((category, index) => category.type === 'folder' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => handleClickCategory(category.name),\n        style: {\n          cursor: 'pointer'\n        },\n        children: category.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), selectedCategory === category.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: category.posts.map((post, idx) => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/blog/${category.name}/${post.name}`,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: post.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 19\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = Post;\n;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","markdownFiles","name","type","posts","Post","children","map","category","index","onClick","handleClickCategory","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","selectedCategory","post","idx","to","_c","$RefreshReg$"],"sources":["C:/Users/epslk/Documents/GitHub/Simple_HTMLStudyWeb/src/post/PageCategory.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\"; \r\n\r\nconst markdownFiles = [\r\n  {\r\n    name: \"카테고리1\", type: \"folder\",\r\n    posts: [\r\n      { name: \"대학공부\", type: \"file\" }, \r\n      { name: \"유니티\", type: \"file\" }\r\n    ]\r\n  },\r\n  {\r\n    name: \"카테고리2\", type: \"folder\",\r\n    posts: [\r\n      { name: \"자바스크립트\", type: \"file\" }, \r\n      { name: \"리액트\", type: \"file\" }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default function Post() {\r\n  return (\r\n    <div>\r\n    {markdownFiles.map((category, index) => (\r\n      category.type === 'folder' && (\r\n        <div key={index}>\r\n          <h3 onClick={() => handleClickCategory(category.name)} style={{ cursor: 'pointer' }}>\r\n            {category.name}\r\n          </h3>\r\n          {selectedCategory === category.name && (\r\n            <div>\r\n              {category.posts.map((post, idx) => (\r\n                <Link key={idx} to={`/blog/${category.name}/${post.name}`}>\r\n                  <h4>{post.name}</h4>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )\r\n    ))}\r\n  </div>\r\n  );\r\n}; \r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAG,CACpB;EACEC,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE,QAAQ;EAC7BC,KAAK,EAAE,CACL;IAAEF,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAO,CAAC,EAC9B;IAAED,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC;AAEjC,CAAC,EACD;EACED,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE,QAAQ;EAC7BC,KAAK,EAAE,CACL;IAAEF,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAO,CAAC,EAChC;IAAED,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC;AAEjC,CAAC,CACF;AAED,eAAe,SAASE,IAAIA,CAAA,EAAG;EAC7B,oBACEL,OAAA;IAAAM,QAAA,EACCL,aAAa,CAACM,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KACjCD,QAAQ,CAACL,IAAI,KAAK,QAAQ,iBACxBH,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAIU,OAAO,EAAEA,CAAA,KAAMC,mBAAmB,CAACH,QAAQ,CAACN,IAAI,CAAE;QAACU,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAU,CAAE;QAAAP,QAAA,EACjFE,QAAQ,CAACN;MAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,EACJC,gBAAgB,KAAKV,QAAQ,CAACN,IAAI,iBACjCF,OAAA;QAAAM,QAAA,EACGE,QAAQ,CAACJ,KAAK,CAACG,GAAG,CAAC,CAACY,IAAI,EAAEC,GAAG,kBAC5BpB,OAAA,CAACF,IAAI;UAAWuB,EAAE,EAAE,SAASb,QAAQ,CAACN,IAAI,IAAIiB,IAAI,CAACjB,IAAI,EAAG;UAAAI,QAAA,eACxDN,OAAA;YAAAM,QAAA,EAAKa,IAAI,CAACjB;UAAI;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC,GADXG,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA,GAZOR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaV,CAER;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAER;AAACK,EAAA,GAvBuBjB,IAAI;AAuB3B;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}