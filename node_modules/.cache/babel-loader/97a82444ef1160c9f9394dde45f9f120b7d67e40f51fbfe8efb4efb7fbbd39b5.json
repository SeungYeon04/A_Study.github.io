{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epslk\\\\Documents\\\\GitHub\\\\Simple_HTMLStudyWeb\\\\src\\\\post\\\\PagePost.js\";\nimport React from \"react\";\nimport { Link, Route, Routes, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst markdownFiles = [{\n  name: \"카테고리1\",\n  post: [{\n    name: \"대학공부\",\n    content: \"내용1\"\n  }, {\n    name: \"유니티\",\n    content: \"내용2\"\n  }]\n}, {\n  name: \"카테고리2\",\n  post: [{\n    name: \"대학공부\",\n    content: \"내용1\"\n  }, {\n    name: \"유니티\",\n    content: \"내용2\"\n  }]\n}];\nexport default function Category() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAE00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: markdownFiles.map((file, fileIndex) => /*#__PURE__*/_jsxDEV(Route, {\n        path: `/blog/${file.name}`,\n        element: /*#__PURE__*/_jsxDEV(CategoryPosts, {\n          category: file\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 71\n        }, this)\n      }, fileIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = Category;\nfunction PostList() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: markdownFiles.map((file, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/blog/${file.name}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, fileIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c2 = PostList;\nfunction Post({\n  category\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), category.post.map((post, postIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: post.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, postIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Post;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"PostList\");\n$RefreshReg$(_c3, \"Post\");","map":{"version":3,"names":["React","Link","Route","Routes","useParams","jsxDEV","_jsxDEV","markdownFiles","name","post","content","Category","children","fileName","_jsxFileName","lineNumber","columnNumber","CategoryList","map","file","fileIndex","path","element","CategoryPosts","category","_c","PostList","to","_c2","Post","postIndex","_c3","$RefreshReg$"],"sources":["C:/Users/epslk/Documents/GitHub/Simple_HTMLStudyWeb/src/post/PagePost.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link, Route, Routes, useParams } from \"react-router-dom\";\r\n\r\nconst markdownFiles = [\r\n  {\r\n    name: \"카테고리1\",\r\n    post: [\r\n      { name: \"대학공부\", content: \"내용1\" },\r\n      { name: \"유니티\", content: \"내용2\" }\r\n    ]\r\n  },\r\n  {\r\n    name: \"카테고리2\",\r\n    post: [\r\n      { name: \"대학공부\", content: \"내용1\" },\r\n      { name: \"유니티\", content: \"내용2\" }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default function Category() {\r\n  return (\r\n    <div>\r\n      <h2>글</h2>\r\n      <CategoryList />\r\n      <Routes>\r\n        {markdownFiles.map((file, fileIndex) => (\r\n          <Route key={fileIndex} path={`/blog/${file.name}`} element={<CategoryPosts category={file} />} />\r\n        ))}\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PostList() {\r\n  return (\r\n    <div>\r\n      {markdownFiles.map((file, fileIndex) => (\r\n        <div key={fileIndex}>\r\n          <Link to={`/blog/${file.name}`}>\r\n            <h3>{file.name}</h3>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Post({ category }) {\r\n  return (\r\n    <div>\r\n      <h3>{category.name}</h3>\r\n      {category.post.map((post, postIndex) => (\r\n        <div key={postIndex}>\r\n          <h4>{post.name}</h4>\r\n          <p>{post.content}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}