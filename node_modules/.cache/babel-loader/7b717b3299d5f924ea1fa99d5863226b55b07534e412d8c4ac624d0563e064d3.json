{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epslk\\\\Documents\\\\GitHub\\\\Simple_HTMLStudyWeb\\\\src\\\\post\\\\PagePost.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  const markdownFiles = [{\n    name: \"대학공부\",\n    content: \"내용1\"\n  }, {\n    name: \"유니티\",\n    content: \"내용2\"\n  }]; //여기 자동으로 카테고리, 이름 찾게 할 거임 \n\n  const files = [{\n    name: \"카테고리1\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }, {\n    name: \"카테고리\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }];\n  //페이지 데이터 받아서 글자 출력  \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAE00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: markdownFiles.map((file, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/blog/${file.name}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: file.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Post","markdownFiles","name","content","files","post","children","fileName","_jsxFileName","lineNumber","columnNumber","map","file","index","to","_c","$RefreshReg$"],"sources":["C:/Users/epslk/Documents/GitHub/Simple_HTMLStudyWeb/src/post/PagePost.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\"; \r\n\r\nexport default function Post() {\r\n  const markdownFiles = [\r\n    { name: \"대학공부\", content: \"내용1\" }, \r\n    { name: \"유니티\", content: \"내용2\" }\r\n  ]; //여기 자동으로 카테고리, 이름 찾게 할 거임 \r\n\r\n  const files = [\r\n    {name : \"카테고리1\", post :[\r\n    { name: \"대학공부\", content: \"내용1\" }, \r\n    { name: \"유니티\", content: \"내용2\" }\r\n    ]},\r\n    {name : \"카테고리\", post :[\r\n      { name: \"대학공부\", content: \"내용1\" }, \r\n      { name: \"유니티\", content: \"내용2\" }\r\n      ]}\r\n  ]\r\n  //페이지 데이터 받아서 글자 출력  \r\n  return (\r\n    <div>\r\n        <h2>글</h2>\r\n    <div>\r\n      {markdownFiles.map((file, index) => (\r\n        <Link\r\n          key={index}\r\n          to={`/blog/${file.name}`}\r\n        >\r\n          <h3>{file.name}</h3>\r\n          <p>{file.content}</p> \r\n        </Link> \r\n      ))}\r\n    </div>\r\n    </div> \r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAC7B,MAAMC,aAAa,GAAG,CACpB;IAAEC,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE;EAAM,CAAC,EAChC;IAAED,IAAI,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAM,CAAC,CAChC,CAAC,CAAC;;EAEH,MAAMC,KAAK,GAAG,CACZ;IAACF,IAAI,EAAG,OAAO;IAAEG,IAAI,EAAE,CACvB;MAAEH,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAM,CAAC,EAChC;MAAED,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAM,CAAC;EAC9B,CAAC,EACF;IAACD,IAAI,EAAG,MAAM;IAAEG,IAAI,EAAE,CACpB;MAAEH,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAM,CAAC,EAChC;MAAED,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAM,CAAC;EAC9B,CAAC,CACL;EACD;EACA,oBACEJ,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAAO,QAAA,EAAI;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdX,OAAA;MAAAO,QAAA,EACGL,aAAa,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7Bd,OAAA,CAACF,IAAI;QAEHiB,EAAE,EAAE,SAASF,IAAI,CAACV,IAAI,EAAG;QAAAI,QAAA,gBAEzBP,OAAA;UAAAO,QAAA,EAAKM,IAAI,CAACV;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBX,OAAA;UAAAO,QAAA,EAAIM,IAAI,CAACT;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJhBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACK,EAAA,GAjCuBf,IAAI;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}