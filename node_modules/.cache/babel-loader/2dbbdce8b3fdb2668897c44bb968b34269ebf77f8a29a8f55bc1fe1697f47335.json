{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epslk\\\\Documents\\\\GitHub\\\\Simple_HTMLStudyWeb\\\\src\\\\post\\\\PagePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link, useRouteMatch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const {\n    path,\n    url\n  } = useRouteMatch();\n  const markdownFiles = [{\n    name: \"대학교 공부정리(B/1-1)\",\n    posts: [{\n      name: \"디지털시스템\",\n      url: \"../대학시절/DigitalSestem.html\"\n    }, {\n      name: \"컴퓨터네트워크\",\n      url: \"../대학시절/Network.html\"\n    }, {\n      name: \"리눅스마스터\",\n      url: \"../대학시절/LinuxMaster.html\"\n    }, {\n      name: \"C언어\",\n      url: \"../대학시절/Cstudy.html\"\n    }, {\n      name: \"html + 포토샵\",\n      url: \"../대학시절/htmljs.html\"\n    }]\n  }\n  // 다른 카테고리를 추가할 수 있습니다.\n  ];\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Box2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: markdownFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: file.posts.map((post, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `${url}/${post.name}`,\n                onClick: () => setSelectedCategory(file),\n                children: post.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: path,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `${path}/:postName`,\n          children: selectedCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), selectedCategory.posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: post.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\uB9C1\\uD06C: \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: post.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: post.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"CJ1sxc5dSVGLZ/vcPLUUy/TNQDk=\", false, function () {\n  return [useRouteMatch];\n});\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Link","useRouteMatch","jsxDEV","_jsxDEV","Post","_s","selectedCategory","setSelectedCategory","path","url","markdownFiles","name","posts","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","file","index","post","idx","to","onClick","exact","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/epslk/Documents/GitHub/Simple_HTMLStudyWeb/src/post/PagePost.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function Post() {\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const { path, url } = useRouteMatch();\r\n\r\n  const markdownFiles = [\r\n    {\r\n      name: \"대학교 공부정리(B/1-1)\",\r\n      posts: [\r\n        { name: \"디지털시스템\", url: \"../대학시절/DigitalSestem.html\" },\r\n        { name: \"컴퓨터네트워크\", url: \"../대학시절/Network.html\" },\r\n        { name: \"리눅스마스터\", url: \"../대학시절/LinuxMaster.html\" },\r\n        { name: \"C언어\", url: \"../대학시절/Cstudy.html\" },\r\n        { name: \"html + 포토샵\", url: \"../대학시절/htmljs.html\" }\r\n      ]\r\n    },\r\n    // 다른 카테고리를 추가할 수 있습니다.\r\n  ];\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"Box2\">\r\n        <h2>카테고리</h2>\r\n        <div>\r\n          {markdownFiles.map((file, index) => (\r\n            <div key={index}>\r\n              <h4>{file.name}</h4>\r\n              <ul>\r\n                {file.posts.map((post, idx) => (\r\n                  <li key={idx}>\r\n                    <Link to={`${url}/${post.name}`} onClick={() => setSelectedCategory(file)}>\r\n                      {post.name}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route exact path={path}>\r\n            <h3>카테고리를 선택하세요.</h3>\r\n          </Route>\r\n          <Route path={`${path}/:postName`}>\r\n            {selectedCategory && (\r\n              <div>\r\n                <h2>{selectedCategory.name}</h2>\r\n                {selectedCategory.posts.map((post, index) => (\r\n                  <div key={index}>\r\n                    <h3>{post.name}</h3>\r\n                    <p>링크: <a href={post.url} target=\"_blank\" rel=\"noopener noreferrer\">{post.url}</a></p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}