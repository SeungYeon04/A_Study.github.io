{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epslk\\\\Documents\\\\GitHub\\\\Simple_HTMLStudyWeb\\\\src\\\\post\\\\PagePost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, Link } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst markdownFiles = [{\n  name: \"카테고리1\",\n  type: \"folder\",\n  posts: [{\n    id: 1,\n    name: \"대학공부\",\n    type: \"file\"\n  }, {\n    id: 2,\n    name: \"유니티\",\n    type: \"file\"\n  }]\n}, {\n  name: \"카테고리2\",\n  type: \"folder\",\n  posts: [{\n    id: 3,\n    name: \"자바스크립트\",\n    type: \"file\"\n  }, {\n    id: 4,\n    name: \"리액트\",\n    type: \"file\"\n  }]\n}];\nconst PagePost = ({\n  selectedCategory\n}) => {\n  _s();\n  const {\n    categoryName\n  } = useParams();\n  const effectiveCategoryName = selectedCategory || categoryName;\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // 카테고리 선택 시 데이터 로딩\n    const selectedCategoryObj = markdownFiles.find(category => category.name === effectiveCategoryName);\n    if (selectedCategoryObj) {\n      setPosts(selectedCategoryObj.posts);\n    }\n  }, [effectiveCategoryName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [effectiveCategoryName, \" \\uD3EC\\uC2A4\\uD2B8 \\uBAA9\\uB85D\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/blog/${effectiveCategoryName}/${post.name}`,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD3EC\\uC2A4\\uD2B8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(PagePost, \"HCoTylxnRWnfNUMt2ywdAjaEfwg=\", false, function () {\n  return [useParams];\n});\n_c = PagePost;\nexport default PagePost;\nvar _c;\n$RefreshReg$(_c, \"PagePost\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","jsxDEV","_jsxDEV","markdownFiles","name","type","posts","id","PagePost","selectedCategory","_s","categoryName","effectiveCategoryName","setPosts","selectedCategoryObj","find","category","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","to","_c","$RefreshReg$"],"sources":["C:/Users/epslk/Documents/GitHub/Simple_HTMLStudyWeb/src/post/PagePost.js"],"sourcesContent":["import React, { useEffect, useState, Link } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst markdownFiles = [\r\n  {\r\n    name: \"카테고리1\", type: \"folder\",\r\n    posts: [\r\n      { id: 1, name: \"대학공부\", type: \"file\" }, \r\n      { id: 2, name: \"유니티\", type: \"file\" }\r\n    ]\r\n  },\r\n  {\r\n    name: \"카테고리2\", type: \"folder\",\r\n    posts: [\r\n      { id: 3, name: \"자바스크립트\", type: \"file\" }, \r\n      { id: 4, name: \"리액트\", type: \"file\" }\r\n    ]\r\n  }\r\n];\r\n\r\nconst PagePost = ({ selectedCategory }) => {\r\n  const { categoryName } = useParams();\r\n  const effectiveCategoryName = selectedCategory || categoryName;\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 카테고리 선택 시 데이터 로딩\r\n    const selectedCategoryObj = markdownFiles.find(category => category.name === effectiveCategoryName);\r\n\r\n    if (selectedCategoryObj) {\r\n      setPosts(selectedCategoryObj.posts);\r\n    }\r\n  }, [effectiveCategoryName]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>{effectiveCategoryName} 포스트 목록</h2>\r\n      {posts.length > 0 ? (\r\n        posts.map(post => (\r\n          <div key={post.id}>\r\n            <Link to={`/blog/${effectiveCategoryName}/${post.name}`}>\r\n              <h4>{post.name}</h4>\r\n            </Link>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div>포스트가 없습니다.</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PagePost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAG,CACpB;EACEC,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE,QAAQ;EAC7BC,KAAK,EAAE,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEH,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAO,CAAC,EACrC;IAAEE,EAAE,EAAE,CAAC;IAAEH,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC;AAExC,CAAC,EACD;EACED,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE,QAAQ;EAC7BC,KAAK,EAAE,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEH,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAO,CAAC,EACvC;IAAEE,EAAE,EAAE,CAAC;IAAEH,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC;AAExC,CAAC,CACF;AAED,MAAMG,QAAQ,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAa,CAAC,GAAGX,SAAS,CAAC,CAAC;EACpC,MAAMY,qBAAqB,GAAGH,gBAAgB,IAAIE,YAAY;EAC9D,MAAM,CAACL,KAAK,EAAEO,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,mBAAmB,GAAGX,aAAa,CAACY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACZ,IAAI,KAAKQ,qBAAqB,CAAC;IAEnG,IAAIE,mBAAmB,EAAE;MACvBD,QAAQ,CAACC,mBAAmB,CAACR,KAAK,CAAC;IACrC;EACF,CAAC,EAAE,CAACM,qBAAqB,CAAC,CAAC;EAE3B,oBACEV,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,GAAKL,qBAAqB,EAAC,kCAAO;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtCf,KAAK,CAACgB,MAAM,GAAG,CAAC,GACfhB,KAAK,CAACiB,GAAG,CAACC,IAAI,iBACZtB,OAAA;MAAAe,QAAA,eACEf,OAAA,CAACH,IAAI;QAAC0B,EAAE,EAAE,SAASb,qBAAqB,IAAIY,IAAI,CAACpB,IAAI,EAAG;QAAAa,QAAA,eACtDf,OAAA;UAAAe,QAAA,EAAKO,IAAI,CAACpB;QAAI;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC,GAHCG,IAAI,CAACjB,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACN,CAAC,gBAEFnB,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACX,EAAA,CA9BIF,QAAQ;EAAA,QACaR,SAAS;AAAA;AAAA0B,EAAA,GAD9BlB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}