{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epslk\\\\Documents\\\\GitHub\\\\Simple_HTMLStudyWeb\\\\src\\\\post\\\\PagePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, Route, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  const markdownFiles = [{\n    name: \"카테고리1\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }, {\n    name: \"카테고리2\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAE00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: markdownFiles.map((file, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/blog/${file.name}`,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, fileIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/blog/:categoryName\",\n      children: /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = Post;\nfunction Category() {\n  _s();\n  const {\n    categoryName\n  } = useParams();\n  const markdownFiles = [{\n    name: \"카테고리1\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }, {\n    name: \"카테고리2\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }];\n  const category = markdownFiles.find(file => file.name === categoryName);\n  if (!category) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uD574\\uB2F9 \\uCE74\\uD14C\\uACE0\\uB9AC\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: categoryName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), category.post.map((post, postIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: post.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, postIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Category, \"MGDD8sTUujKJP+spoqFXIbW1eyA=\", false, function () {\n  return [useParams];\n});\n_c2 = Category;\nvar _c, _c2;\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Category\");","map":{"version":3,"names":["React","useState","Link","Route","useParams","jsxDEV","_jsxDEV","Post","markdownFiles","name","post","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","file","fileIndex","to","path","Category","_c","_s","categoryName","category","find","postIndex","_c2","$RefreshReg$"],"sources":["C:/Users/epslk/Documents/GitHub/Simple_HTMLStudyWeb/src/post/PagePost.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, Route, useParams } from \"react-router-dom\"; \r\n\r\nexport default function Post() {\r\n  const markdownFiles = [\r\n    { name: \"카테고리1\", post: [\r\n      { name: \"대학공부\", content: \"내용1\" }, \r\n      { name: \"유니티\", content: \"내용2\" }\r\n    ]},\r\n    { name: \"카테고리2\", post: [\r\n      { name: \"대학공부\", content: \"내용1\" }, \r\n      { name: \"유니티\", content: \"내용2\" }\r\n    ]}\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h2>글</h2>\r\n      <div>\r\n        {markdownFiles.map((file, fileIndex) => (\r\n          <div key={fileIndex}>\r\n            <Link to={`/blog/${file.name}`}>\r\n              <h3>{file.name}</h3>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <Route path=\"/blog/:categoryName\">\r\n        <Category />\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Category() {\r\n  const { categoryName } = useParams();\r\n\r\n  const markdownFiles = [\r\n    { name: \"카테고리1\", post: [\r\n      { name: \"대학공부\", content: \"내용1\" }, \r\n      { name: \"유니티\", content: \"내용2\" }\r\n    ]},\r\n    { name: \"카테고리2\", post: [\r\n      { name: \"대학공부\", content: \"내용1\" }, \r\n      { name: \"유니티\", content: \"내용2\" }\r\n    ]}\r\n  ];\r\n\r\n  const category = markdownFiles.find(file => file.name === categoryName);\r\n\r\n  if (!category) return <div>해당 카테고리를 찾을 수 없습니다.</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h3>{categoryName}</h3>\r\n      {category.post.map((post, postIndex) => (\r\n        <div key={postIndex}>\r\n          <h4>{post.name}</h4>\r\n          <p>{post.content}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}