{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epslk\\\\Documents\\\\GitHub\\\\Simple_HTMLStudyWeb\\\\src\\\\post\\\\PagePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const {\n    path,\n    url\n  } = useRouteMatch();\n  const markdownFiles = [{\n    name: \"카테고리1\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }, {\n    name: \"카테고리2\",\n    post: [{\n      name: \"대학공부\",\n      content: \"내용1\"\n    }, {\n      name: \"유니티\",\n      content: \"내용2\"\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: markdownFiles.map((file, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `${url}/${file.name}`,\n        onClick: () => setSelectedCategory(file),\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: path,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}/:categoryName`,\n        children: selectedCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedCategory.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), selectedCategory.post.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"CJ1sxc5dSVGLZ/vcPLUUy/TNQDk=\", false, function () {\n  return [useRouteMatch];\n});\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","Link","Route","Switch","useRouteMatch","jsxDEV","_jsxDEV","Post","_s","selectedCategory","setSelectedCategory","path","url","markdownFiles","name","post","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","file","index","to","onClick","exact","_c","$RefreshReg$"],"sources":["C:/Users/epslk/Documents/GitHub/Simple_HTMLStudyWeb/src/post/PagePost.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function Post() {\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const { path, url } = useRouteMatch();\r\n\r\n  const markdownFiles = [\r\n    { name: \"카테고리1\", post: [\r\n      { name: \"대학공부\", content: \"내용1\" },\r\n      { name: \"유니티\", content: \"내용2\" }\r\n    ]},\r\n    { name: \"카테고리2\", post: [\r\n      { name: \"대학공부\", content: \"내용1\" },\r\n      { name: \"유니티\", content: \"내용2\" }\r\n    ]}\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h2>카테고리</h2>\r\n      <div>\r\n        {markdownFiles.map((file, index) => (\r\n          <Link\r\n            key={index}\r\n            to={`${url}/${file.name}`}\r\n            onClick={() => setSelectedCategory(file)}\r\n          >\r\n            <h3>{file.name}</h3>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <h3>카테고리를 선택하세요.</h3>\r\n        </Route>\r\n        <Route path={`${path}/:categoryName`}>\r\n          {selectedCategory && (\r\n            <div>\r\n              <h2>{selectedCategory.name}</h2>\r\n              {selectedCategory.post.map((post, index) => (\r\n                <div key={index}>\r\n                  <h3>{post.name}</h3>\r\n                  <p>{post.content}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}